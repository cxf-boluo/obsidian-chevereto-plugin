/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var P=Object.create;var h=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty;var A=(i,e)=>{for(var t in e)h(i,t,{get:e[t],enumerable:!0})},E=(i,e,t,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of T(e))!I.call(i,n)&&n!==t&&h(i,n,{get:()=>e[n],enumerable:!(a=S(e,n))||a.enumerable});return i};var C=(i,e,t)=>(t=i!=null?P(x(i)):{},E(e||!i||!i.__esModule?h(t,"default",{value:i,enumerable:!0}):t,i)),M=i=>E(h({},"__esModule",{value:!0}),i);var D={};A(D,{default:()=>u});module.exports=M(D);var s=require("obsidian"),k=C(require("https")),U={apiEndpoint:"https://xxxxx/api/1/upload",apiToken:"your-api-token-here"};function v(i,e){console.error(i,e),new s.Notice(i)}var w=class{constructor(e,t){this.apiEndpoint=e,this.apiToken=t}async uploadImage(e){console.log("Uploading image...");let t=await e.arrayBuffer(),a=Buffer.from(t),n="----WebKitFormBoundary7MA4YWxkTrZu0gW",p=Buffer.concat([Buffer.from(`--${n}\r
Content-Disposition: form-data; name="source"; filename="${e.name}"\r
Content-Type: ${e.type}\r
\r
`),a,Buffer.from(`\r
--${n}--\r
`)]),o=new URL(this.apiEndpoint),g={hostname:o.hostname,port:o.port||443,path:o.pathname,method:"POST",headers:{"Content-Type":`multipart/form-data; boundary=${n}`,"Content-Length":p.length,"X-API-Key":this.apiToken}};return new Promise((c,r)=>{let f=k.request(g,d=>{let m="";d.on("data",l=>{m+=l}),d.on("end",()=>{if(d.statusCode===200)try{let l=JSON.parse(m);l.status_code==200?c(l.image.url):r(new Error("Upload failed: "+m))}catch(l){r(new Error("Error parsing response: "+l))}else r(new Error("Upload failed with status: "+d.statusCode))})});f.on("error",d=>{r(new Error("Request error: "+d))}),f.write(p),f.end()})}},u=class extends s.Plugin{async onload(){console.log("[info] Image upload plugin is loaded"),await this.loadSettings(),this.imageUploadService=new w(this.settings.apiEndpoint,this.settings.apiToken),this.registerEvent(this.app.workspace.on("editor-paste",this.paste_handle.bind(this))),this.addSettingTab(new y(this.app,this))}async loadSettings(){let t=await this.loadData();this.settings=Object.assign({},U,t)}async saveSettings(){await this.saveData(this.settings)}async paste_handle(t,a,n){let p=t.clipboardData;if(p){let o=p.items;for(let g=0;g<o.length;g++){let c=o[g];if(c.type.startsWith("image")){t.preventDefault();let r=await this.imageUploadService.uploadImage(c.getAsFile());r instanceof Error?v("Failed to upload image",r):this.insert_image(r)}}}}insert_image(t){let a=this.app.workspace.activeLeaf;if(a&&a.view instanceof s.MarkdownView){let n=a.view.editor,p=n.getCursor(),o=`![](${t})`;n.replaceRange(o,p)}else v("Failed to insert image, no active Markdown view.","No active Markdown view found")}},y=class extends s.PluginSettingTab{constructor(t,a){super(t,a);this.plugin=a}display(){let{containerEl:t}=this;t.empty(),new s.Setting(t).setName("API Endpoint").setDesc("Enter the API endpoint URL").addText(a=>a.setPlaceholder("e.g., https://example.com/api/upload").setValue(this.plugin.settings.apiEndpoint).onChange(async n=>{this.plugin.settings.apiEndpoint=n,await this.plugin.saveSettings()})),new s.Setting(t).setName("API Key").setDesc("Enter your API key").addText(a=>a.setPlaceholder("e.g., 12345abcdef").setValue(this.plugin.settings.apiToken).onChange(async n=>{this.plugin.settings.apiToken=n,await this.plugin.saveSettings()}))}};
